{
   "basePath": "http://localhost:8080/RestApiDoc-example",
   "apis": [
      {
         "methods": [
            {
               "headers": [],
               "bodyobject": null,
               "jsondocId": "9900d044-4ea0-4097-8256-07f9c2dce17f",
               "consumes": [],
               "response": {
                  "mapKeyObject": "",
                  "jsondocId": "1c6fcf67-3bee-4b77-a004-90e76cf3341d",
                  "mapValueObject": "",
                  "object": "author"
               },
               "pathparameters": [],
               "apierrors": [
                  {
                     "jsondocId": "fdfc4fda-802b-4589-bfe8-dd005d945298",
                     "description": "Bad Request: missing parameters or bad message format",
                     "code": "400"
                  },
                  {
                     "jsondocId": "90780c00-c8a0-489b-8812-5a4fa229f267",
                     "description": "Unauthorized: must be auth",
                     "code": "401"
                  },
                  {
                     "jsondocId": "5ee0a1ea-6a4c-432d-93a6-947b9ff1cb17",
                     "description": "Forbidden: role error",
                     "code": "403"
                  },
                  {
                     "jsondocId": "09a743d0-d2b3-42c8-ab88-fa156fabf03d",
                     "description": "Object not found",
                     "code": "404"
                  }
               ],
               "verb": "GET",
               "description": "List all authors",
               "queryparameters": [{
                  "jsondocId": "1fb44994-3b7c-4921-baac-9d304822cbee",
                  "description": "Max number of author to retrieve",
                  "name": "max",
                  "allowedvalues": [],
                  "format": "",
                  "required": "true",
                  "type": "int"
               }],
               "path": "/author/list.json",
               "produces": ["application/json"],
               "methodName": "list"
            },
            {
               "headers": [],
               "bodyobject": null,
               "jsondocId": "ef94a752-5f64-44fa-868a-90ab34dc0e70",
               "consumes": [],
               "response": {
                  "mapKeyObject": "",
                  "jsondocId": "87e32751-6b0a-465f-9667-bbdb8bf70c23",
                  "mapValueObject": "",
                  "object": "author"
               },
               "pathparameters": [],
               "apierrors": [
                  {
                     "jsondocId": "2f0376f3-7493-4bb3-ae89-31eaf11e0f92",
                     "description": "Bad Request: missing parameters or bad message format",
                     "code": "400"
                  },
                  {
                     "jsondocId": "5b750e4e-5642-495c-b197-bd3301e0c5eb",
                     "description": "Unauthorized: must be auth",
                     "code": "401"
                  },
                  {
                     "jsondocId": "7d8f0880-c8a2-4456-980e-da916ee3271c",
                     "description": "Forbidden: role error",
                     "code": "403"
                  },
                  {
                     "jsondocId": "de24e32b-39a9-4fee-98fe-5500b3e1f714",
                     "description": "Object not found",
                     "code": "404"
                  }
               ],
               "verb": "GET",
               "description": "Get a authors with this lastname and firstname",
               "queryparameters": [
                  {
                     "jsondocId": "74e1b475-b84e-48a5-affc-dae1ddb3f512",
                     "description": "The lastname criteria",
                     "name": "lastname",
                     "allowedvalues": [],
                     "format": "",
                     "required": "true",
                     "type": ""
                  },
                  {
                     "jsondocId": "c928e756-4f88-4125-8e9c-6bbfc6652a44",
                     "description": "The lastname criteria",
                     "name": "firstname",
                     "allowedvalues": [],
                     "format": "",
                     "required": "true",
                     "type": "String"
                  }
               ],
               "path": "/author/search.json",
               "produces": ["application/json"],
               "methodName": "search"
            },
            {
               "headers": [],
               "bodyobject": null,
               "jsondocId": "518e518e-992c-4ceb-a084-fe2970fb65ed",
               "consumes": [],
               "response": {
                  "mapKeyObject": "",
                  "jsondocId": "f7a5db4f-c64a-44b4-bcae-c88511862a00",
                  "mapValueObject": "",
                  "object": "author"
               },
               "pathparameters": [],
               "apierrors": [
                  {
                     "jsondocId": "051b5661-c3d3-4c61-a466-b68d7a4fa620",
                     "description": "Bad Request: missing parameters or bad message format",
                     "code": "400"
                  },
                  {
                     "jsondocId": "1cc633a1-9f31-4770-9259-3dc00afc43bb",
                     "description": "Unauthorized: must be auth",
                     "code": "401"
                  },
                  {
                     "jsondocId": "01889911-cd39-4856-a0ee-ca81c647e98f",
                     "description": "Forbidden: role error",
                     "code": "403"
                  },
                  {
                     "jsondocId": "98e58002-3e3e-4a75-b774-f63bf5dfccc0",
                     "description": "Object not found",
                     "code": "404"
                  }
               ],
               "verb": "GET",
               "description": "Get author stats",
               "queryparameters": [{
                  "jsondocId": "6c68a04d-ce9c-404b-9507-040fe8760d4e",
                  "description": "The author id",
                  "name": "id",
                  "allowedvalues": [],
                  "format": "",
                  "required": "true",
                  "type": "long"
               }],
               "path": "/author/stats.json",
               "produces": ["application/json"],
               "methodName": "stats"
            },
            {
               "headers": [],
               "bodyobject": {
                  "mapKeyObject": "",
                  "jsondocId": "90744dc9-bdb1-46ce-9969-038d589aa59f",
                  "mapValueObject": "",
                  "map": "",
                  "object": "nothing",
                  "multiple": "Unknow"
               },
               "jsondocId": "eb625fc0-948f-4292-83b4-324defcdd8ff",
               "consumes": ["application/json"],
               "response": {
                  "mapKeyObject": "",
                  "jsondocId": "0cf4979a-63d9-4d9e-99ec-2b09eeae2517",
                  "mapValueObject": "",
                  "object": "[stats]"
               },
               "pathparameters": [{
                  "jsondocId": "4a8c7f47-6710-4853-8df0-c5a94321863f",
                  "description": "Max number of author to retrieve",
                  "name": "max",
                  "allowedvalues": [],
                  "format": "",
                  "required": "true",
                  "type": "int"
               }],
               "apierrors": [
                  {
                     "jsondocId": "5ea25b3d-b35d-405d-b313-0ede53cf2039",
                     "description": "A custom error!",
                     "code": "400"
                  },
                  {
                     "jsondocId": "83f5e965-3391-438c-a291-6b15de78634c",
                     "description": "Unauthorized: must be auth",
                     "code": "401"
                  },
                  {
                     "jsondocId": "543317dd-b4b0-4390-80ba-bcd9cd0116b8",
                     "description": "Forbidden: role error",
                     "code": "403"
                  },
                  {
                     "jsondocId": "506c1c43-b7ae-4248-a8d0-23e99ce295e2",
                     "description": "Object not found",
                     "code": "404"
                  },
                  {
                     "jsondocId": "b68026aa-4cdf-4a3d-aa65-f35ce9b27b41",
                     "description": "Object already exist",
                     "code": "409"
                  }
               ],
               "verb": "PUT",
               "description": "Get stats data for an author",
               "queryparameters": [],
               "path": "/a_custom_path/{max}.json",
               "produces": ["application/json"],
               "methodName": "someCustomPath"
            },
            {
               "headers": [],
               "bodyobject": null,
               "jsondocId": "e79b0fa0-3c3a-497e-b5a1-60e82020ef7b",
               "consumes": [],
               "response": {
                  "mapKeyObject": "",
                  "jsondocId": "4a2c6e11-c7de-4463-950d-265bab6b3e64",
                  "mapValueObject": "",
                  "object": "author"
               },
               "pathparameters": [{
                  "jsondocId": "d0ee381d-5ccc-4f10-9eb2-4fbcc5ae7687",
                  "description": "The author id",
                  "name": "id",
                  "allowedvalues": [],
                  "format": "",
                  "required": "true",
                  "type": "long"
               }],
               "apierrors": [
                  {
                     "jsondocId": "25c01629-1abd-4188-8406-73862aeb9971",
                     "description": "Bad Request: missing parameters or bad message format",
                     "code": "400"
                  },
                  {
                     "jsondocId": "b58e65ed-ed5e-4fbe-bf66-07d18625597e",
                     "description": "Unauthorized: must be auth",
                     "code": "401"
                  },
                  {
                     "jsondocId": "e94658c3-3b1f-48cf-bcf6-1d4adde3e9d0",
                     "description": "Forbidden: role error",
                     "code": "403"
                  },
                  {
                     "jsondocId": "4cda99b0-be09-40cd-822b-bb467b71dbd7",
                     "description": "Object not found",
                     "code": "404"
                  }
               ],
               "verb": "GET",
               "description": "Get author avatar",
               "queryparameters": [{
                  "jsondocId": "456fda7d-9d0f-4465-8ab8-ed50e2c4ddc1",
                  "description": "Width size for avatar",
                  "name": "size",
                  "allowedvalues": [],
                  "format": "",
                  "required": "true",
                  "type": "long"
               }],
               "path": "/author/avatar.jpg",
               "produces": ["application/json"],
               "methodName": "avatar"
            },
            {
               "headers": [],
               "bodyobject": null,
               "jsondocId": "2f4cd171-b7c9-4f22-9f31-e45172a1128f",
               "consumes": [],
               "response": {
                  "mapKeyObject": "",
                  "jsondocId": "95bc3f78-3e24-4d6d-8914-fd8a0ab1ba61",
                  "mapValueObject": "",
                  "object": "author"
               },
               "pathparameters": [{
                  "jsondocId": "09fadfcd-973b-452e-bcd8-1bd2f019b63f",
                  "description": "The author id",
                  "name": "id",
                  "allowedvalues": [],
                  "format": "",
                  "required": "true",
                  "type": "long"
               }],
               "apierrors": [
                  {
                     "jsondocId": "0a83fcd0-5fbf-43ab-ad30-82bb8684fe16",
                     "description": "Bad Request: missing parameters or bad message format",
                     "code": "400"
                  },
                  {
                     "jsondocId": "5b0bb94b-f69e-4989-8ec9-9630220b88d5",
                     "description": "Unauthorized: must be auth",
                     "code": "401"
                  },
                  {
                     "jsondocId": "569ef58d-990b-4990-8c11-e759c286e619",
                     "description": "Forbidden: role error",
                     "code": "403"
                  },
                  {
                     "jsondocId": "26f267c6-c62a-43d4-aa5f-aaff45927ec4",
                     "description": "Object not found",
                     "code": "404"
                  }
               ],
               "verb": "GET",
               "description": "Get author avatar",
               "queryparameters": [{
                  "jsondocId": "a09eb7c2-5bdb-48c0-a334-c9f6fbad1ffd",
                  "description": "Width size for avatar",
                  "name": "size",
                  "allowedvalues": [],
                  "format": "",
                  "required": "true",
                  "type": "long"
               }],
               "path": "/author/avatar.png",
               "produces": ["application/json"],
               "methodName": "avatar"
            },
            {
               "headers": [],
               "bodyobject": {
                  "mapKeyObject": "",
                  "jsondocId": "1de66251-9e29-4b33-8f47-72801d0219f9",
                  "mapValueObject": "",
                  "map": "",
                  "object": "author",
                  "multiple": "Unknow"
               },
               "jsondocId": "d463a386-7460-4b2a-8974-b5d127d01e6f",
               "consumes": ["application/json"],
               "response": {
                  "mapKeyObject": "",
                  "jsondocId": "426150a8-679e-4d29-9520-bee659db8d4c",
                  "mapValueObject": "",
                  "object": "author"
               },
               "pathparameters": [],
               "apierrors": [
                  {
                     "jsondocId": "3a69f5ba-47e3-4179-82a5-dd75f1ff4377",
                     "description": "Bad Request: missing parameters or bad message format",
                     "code": "400"
                  },
                  {
                     "jsondocId": "77e6bfab-6d03-4df8-b187-027a8a739cce",
                     "description": "Unauthorized: must be auth",
                     "code": "401"
                  },
                  {
                     "jsondocId": "745c1b98-e0be-4ec8-bab0-c52801c3e631",
                     "description": "Forbidden: role error",
                     "code": "403"
                  },
                  {
                     "jsondocId": "6b5528df-d9d8-48f0-9cd4-8828ac5102a6",
                     "description": "Object not found",
                     "code": "404"
                  },
                  {
                     "jsondocId": "cc267b3c-17db-40c4-9407-abcea9a205b9",
                     "description": "Object already exist",
                     "code": "409"
                  }
               ],
               "verb": "POST",
               "description": "Generic query on an ",
               "queryparameters": [
                  {
                     "jsondocId": "8e881e05-6b4e-4420-9166-e2cc01e618cb",
                     "description": "The object id",
                     "name": "max",
                     "allowedvalues": [],
                     "format": "",
                     "required": "true",
                     "type": "long"
                  },
                  {
                     "jsondocId": "e5768ba4-a87e-4838-99a5-7c0f6cce3aea",
                     "description": "The object id",
                     "name": "offfset",
                     "allowedvalues": [],
                     "format": "",
                     "required": "true",
                     "type": "long"
                  },
                  {
                     "jsondocId": "685e0957-0ee5-46e7-987d-4f08c0299b30",
                     "description": "The object id",
                     "name": "order",
                     "allowedvalues": [
                        "asc",
                        "desc"
                     ],
                     "format": "",
                     "required": "true",
                     "type": "string"
                  },
                  {
                     "jsondocId": "46e4f8f5-300e-431b-b817-42581e8118c3",
                     "description": "The object id",
                     "name": "sort",
                     "allowedvalues": [],
                     "format": "",
                     "required": "true",
                     "type": "string"
                  }
               ],
               "path": "/author/issue32.json",
               "produces": ["application/json"],
               "methodName": "issue32"
            },
            {
               "headers": [],
               "bodyobject": null,
               "jsondocId": "8a911c98-2950-4869-9eb3-283f3f7ae910",
               "consumes": [],
               "response": {
                  "mapKeyObject": "",
                  "jsondocId": "59dbc306-1ae6-430b-861c-7c6a8bb56160",
                  "mapValueObject": "",
                  "object": "author"
               },
               "pathparameters": [{
                  "jsondocId": "61873348-09e6-42cc-ab46-a48bc1fb98cf",
                  "description": "The author id",
                  "name": "id",
                  "allowedvalues": [],
                  "format": "",
                  "required": "true",
                  "type": "long"
               }],
               "apierrors": [
                  {
                     "jsondocId": "87c51616-23ee-4113-aad5-980fc17dee4c",
                     "description": "Bad Request: missing parameters or bad message format",
                     "code": "400"
                  },
                  {
                     "jsondocId": "9bc5720f-63f9-459c-a895-15d7d7f11492",
                     "description": "Unauthorized: must be auth",
                     "code": "401"
                  },
                  {
                     "jsondocId": "371120c5-b091-4a03-bcbc-187f2517ba7f",
                     "description": "Forbidden: role error",
                     "code": "403"
                  },
                  {
                     "jsondocId": "eb01745c-d288-4d28-9a56-701f147ee6fd",
                     "description": "Object not found",
                     "code": "404"
                  }
               ],
               "verb": "GET",
               "description": "Get an author",
               "queryparameters": [],
               "path": "/author/show/{id}.json",
               "produces": ["application/json"],
               "methodName": "show"
            }
         ],
         "jsondocId": "5aab2407-6878-441d-a445-456b23ee3e34",
         "description": "Methods for managing authors",
         "name": "author services"
      },
      {
         "methods": [
            {
               "headers": [],
               "bodyobject": {
                  "mapKeyObject": "",
                  "jsondocId": "9747d7fd-646a-4c45-9400-ed90c8addad0",
                  "mapValueObject": "",
                  "map": "",
                  "object": "book",
                  "multiple": "Unknow"
               },
               "jsondocId": "35434113-b5ab-44c5-841c-8a678089b838",
               "consumes": ["application/json"],
               "response": {
                  "mapKeyObject": "",
                  "jsondocId": "10c1966b-f3ea-4f8e-8eca-b9e3f1133012",
                  "mapValueObject": "",
                  "object": "book"
               },
               "pathparameters": [],
               "apierrors": [
                  {
                     "jsondocId": "31a6e18c-628c-48cb-878c-0d1c8ca98051",
                     "description": "Bad Request: missing parameters or bad message format",
                     "code": "400"
                  },
                  {
                     "jsondocId": "6d01d54a-03c6-47e7-8900-c8fdcd545ffc",
                     "description": "Unauthorized: must be auth",
                     "code": "401"
                  },
                  {
                     "jsondocId": "867c1b04-f472-4d23-b22d-9102ffad521b",
                     "description": "Forbidden: role error",
                     "code": "403"
                  },
                  {
                     "jsondocId": "38504091-784e-42fc-afed-e05cc46625d4",
                     "description": "Object not found",
                     "code": "404"
                  },
                  {
                     "jsondocId": "3486eb41-2983-4b93-9d93-6faaa6548006",
                     "description": "Object already exist",
                     "code": "409"
                  }
               ],
               "verb": "POST",
               "description": "Add a book on the store",
               "queryparameters": [],
               "path": "/api/book.json",
               "produces": ["application/json"],
               "methodName": "save"
            },
            {
               "headers": [],
               "bodyobject": null,
               "jsondocId": "aa8d1ee4-c522-4109-a3f9-68fe3b80b9f3",
               "consumes": [],
               "response": {
                  "mapKeyObject": "",
                  "jsondocId": "8cea7941-cca1-4e24-83d4-3793be8982ae",
                  "mapValueObject": "",
                  "object": "book"
               },
               "pathparameters": [{
                  "jsondocId": "6eeb4b75-91f3-4867-9c5c-5b3a610a23a1",
                  "description": "The book id",
                  "name": "id",
                  "allowedvalues": [],
                  "format": "",
                  "required": "true",
                  "type": "long"
               }],
               "apierrors": [
                  {
                     "jsondocId": "7c8bbbe2-82e4-4bc5-9dd3-ea43c927c5e7",
                     "description": "Bad Request: missing parameters or bad message format",
                     "code": "400"
                  },
                  {
                     "jsondocId": "ef60bc5a-612f-4a8c-b1eb-c5633190e8ad",
                     "description": "Unauthorized: must be auth",
                     "code": "401"
                  },
                  {
                     "jsondocId": "324c1748-97d4-422a-8757-3f80c173cebe",
                     "description": "Forbidden: role error",
                     "code": "403"
                  },
                  {
                     "jsondocId": "e4287b4a-c13a-4b53-bda3-3b8f0d3c0d35",
                     "description": "Object not found",
                     "code": "404"
                  }
               ],
               "verb": "DELETE",
               "description": "Delete a book",
               "queryparameters": [],
               "path": "/api/book/{id}.json",
               "produces": ["application/json"],
               "methodName": "delete"
            },
            {
               "headers": [],
               "bodyobject": {
                  "mapKeyObject": "",
                  "jsondocId": "78fc21ec-7997-4b9c-a6b4-cfe751cda4e8",
                  "mapValueObject": "",
                  "map": "",
                  "object": "book",
                  "multiple": "Unknow"
               },
               "jsondocId": "bfe7a8d9-b555-4e27-840f-a894637efdf3",
               "consumes": ["application/json"],
               "response": {
                  "mapKeyObject": "",
                  "jsondocId": "141d8a0d-eb67-485a-b867-c79996d51ded",
                  "mapValueObject": "",
                  "object": "book"
               },
               "pathparameters": [{
                  "jsondocId": "8cde75a3-2174-4820-a10a-dfe787aff901",
                  "description": "The book id",
                  "name": "id",
                  "allowedvalues": [],
                  "format": "",
                  "required": "true",
                  "type": "long"
               }],
               "apierrors": [
                  {
                     "jsondocId": "be122d62-1545-4efd-a997-e1898e57f514",
                     "description": "Bad Request: missing parameters or bad message format",
                     "code": "400"
                  },
                  {
                     "jsondocId": "89186fe7-13ab-4397-9149-139c33385947",
                     "description": "Unauthorized: must be auth",
                     "code": "401"
                  },
                  {
                     "jsondocId": "dc92f6eb-9011-4de8-818e-a20d2fcc61f0",
                     "description": "Forbidden: role error",
                     "code": "403"
                  },
                  {
                     "jsondocId": "29058ba1-dcfb-4cc9-aac7-c44344232004",
                     "description": "Object not found",
                     "code": "404"
                  },
                  {
                     "jsondocId": "c2df7077-23ab-4943-b06b-3736ea8e9736",
                     "description": "Object already exist",
                     "code": "409"
                  }
               ],
               "verb": "PUT",
               "description": "Edit a book",
               "queryparameters": [],
               "path": "/api/book/{id}.json",
               "produces": ["application/json"],
               "methodName": "update"
            },
            {
               "headers": [],
               "bodyobject": null,
               "jsondocId": "c9eb2e59-d5d7-4ada-af9e-bdb55826c245",
               "consumes": [],
               "response": {
                  "mapKeyObject": "",
                  "jsondocId": "4b93df06-d083-431f-ab79-2b9f34fbf282",
                  "mapValueObject": "",
                  "object": "book"
               },
               "pathparameters": [{
                  "jsondocId": "5f2d579b-1088-4930-9865-d41b626669d8",
                  "description": "The author id",
                  "name": "id",
                  "allowedvalues": [],
                  "format": "",
                  "required": "true",
                  "type": "long"
               }],
               "apierrors": [
                  {
                     "jsondocId": "7a202697-b705-4184-900b-dc7430013ccf",
                     "description": "Bad Request: missing parameters or bad message format",
                     "code": "400"
                  },
                  {
                     "jsondocId": "a51f188c-7eba-45ee-bff1-4458d901a930",
                     "description": "Unauthorized: must be auth",
                     "code": "401"
                  },
                  {
                     "jsondocId": "f32e7772-7f6a-4c21-9609-f803430dffa8",
                     "description": "Forbidden: role error",
                     "code": "403"
                  },
                  {
                     "jsondocId": "84151ee8-dd1b-4664-840d-f9f6a972f2db",
                     "description": "Object not found",
                     "code": "404"
                  }
               ],
               "verb": "GET",
               "description": "List books written by the author",
               "queryparameters": [],
               "path": "/api/author/{id}/book.json",
               "produces": ["application/json"],
               "methodName": "listByAuthor"
            },
            {
               "headers": [],
               "bodyobject": null,
               "jsondocId": "679776ce-5bfb-4def-a979-7a6eecf3de4e",
               "consumes": [],
               "response": {
                  "mapKeyObject": "",
                  "jsondocId": "444fbe4e-1782-4471-bd07-ba3332dbe974",
                  "mapValueObject": "",
                  "object": "book"
               },
               "pathparameters": [{
                  "jsondocId": "fc2326e0-7550-498d-a54f-31ecf7985b05",
                  "description": "The book id",
                  "name": "id",
                  "allowedvalues": [],
                  "format": "",
                  "required": "true",
                  "type": "long"
               }],
               "apierrors": [
                  {
                     "jsondocId": "f98156c0-3d4a-4e08-bd06-b71603212a96",
                     "description": "Bad Request: missing parameters or bad message format",
                     "code": "400"
                  },
                  {
                     "jsondocId": "3f9e8f96-c8b6-4bc3-bd73-ef2ae177ae49",
                     "description": "Unauthorized: must be auth",
                     "code": "401"
                  },
                  {
                     "jsondocId": "f8a73a91-2840-4e11-98b0-4df28341cdf2",
                     "description": "Forbidden: role error",
                     "code": "403"
                  },
                  {
                     "jsondocId": "30a55ff4-3d38-45ca-8f66-c55351987330",
                     "description": "Object not found",
                     "code": "404"
                  }
               ],
               "verb": "GET",
               "description": "Get a book",
               "queryparameters": [],
               "path": "/api/book/{id}.json",
               "produces": ["application/json"],
               "methodName": "show"
            }
         ],
         "jsondocId": "8d8ad1fe-e7a5-483c-a26f-ee0115bb5812",
         "description": "Methods for managing books",
         "name": "book services"
      }
   ],
   "objects": [
      {
         "jsondocId": "430ead69-eb4f-4636-b8fa-28405cd3e576",
         "description": "An author stats",
         "name": "[stats]",
         "fields": [
            {
               "jsondocId": "01fd7252-7598-4690-b610-6db09089a8e3",
               "description": "The author fullname",
               "presentInResponse": false,
               "mandatory": false,
               "name": "fullname",
               "allowedvalues": null,
               "useForCreation": false,
               "format": null,
               "defaultValue": null,
               "type": "String",
               "multiple": "false"
            },
            {
               "jsondocId": "a04f1400-69c2-4a00-a4af-9d18f43b871d",
               "description": "The number of books created by this author",
               "presentInResponse": false,
               "mandatory": false,
               "name": "numberOfBook",
               "allowedvalues": null,
               "useForCreation": false,
               "format": null,
               "defaultValue": null,
               "type": "Integer",
               "multiple": "false"
            }
         ]
      },
      {
         "jsondocId": "1a0abf7a-8e02-4bdd-842f-37d98e0f6917",
         "description": "An author write books",
         "name": "author",
         "fields": [
            {
               "jsondocId": "292162af-3faf-4f40-b4a7-c5c91fad3a20",
               "description": "The firstname of the author",
               "presentInResponse": true,
               "mandatory": true,
               "name": "firstname",
               "allowedvalues": null,
               "useForCreation": true,
               "format": null,
               "defaultValue": null,
               "type": "String",
               "multiple": "false"
            },
            {
               "jsondocId": "b061efef-0049-4e17-803a-d507e7cb90da",
               "description": "The lastname of the author",
               "presentInResponse": true,
               "mandatory": true,
               "name": "lastname",
               "allowedvalues": null,
               "useForCreation": true,
               "format": null,
               "defaultValue": null,
               "type": "String",
               "multiple": "false"
            },
            {
               "jsondocId": "a801b34c-99dd-4353-85f5-2f4794f988f3",
               "description": "The first and lastname",
               "presentInResponse": true,
               "mandatory": false,
               "name": "fullname",
               "allowedvalues": null,
               "useForCreation": false,
               "format": null,
               "defaultValue": null,
               "type": "String",
               "multiple": "false"
            },
            {
               "jsondocId": "3f2a7c61-4438-41af-82b4-4fa077472e50",
               "description": "Books id written by this author",
               "presentInResponse": true,
               "mandatory": false,
               "name": "books",
               "allowedvalues": null,
               "useForCreation": false,
               "format": null,
               "defaultValue": null,
               "type": "List",
               "multiple": "true"
            },
            {
               "jsondocId": "e2939e63-4d3a-44d8-b0b7-9128e1dc1111",
               "description": "The birthday date of the author",
               "presentInResponse": false,
               "mandatory": false,
               "name": "birthday",
               "allowedvalues": null,
               "useForCreation": true,
               "format": null,
               "defaultValue": "01/01/1970",
               "type": "Date",
               "multiple": "false"
            },
            {
               "jsondocId": "b2e2b566-381f-4b99-92fc-b64e27b09294",
               "description": null,
               "presentInResponse": false,
               "mandatory": null,
               "name": "id",
               "allowedvalues": null,
               "useForCreation": null,
               "format": null,
               "defaultValue": null,
               "type": "Long",
               "multiple": "false"
            }
         ]
      },
      {
         "jsondocId": "8da574b5-b5d9-4eda-a919-24d02eceb478",
         "description": "A book available on the store",
         "name": "book",
         "fields": [
            {
               "jsondocId": "ef397ef4-c836-4c1a-9a78-e9b2edaa5948",
               "description": "The author of the book",
               "presentInResponse": true,
               "mandatory": true,
               "name": "author",
               "allowedvalues": null,
               "useForCreation": true,
               "format": null,
               "defaultValue": null,
               "type": "Author",
               "multiple": "false"
            },
            {
               "jsondocId": "ac0a0f94-2965-4e32-99e2-880555fe037f",
               "description": "The book category",
               "presentInResponse": true,
               "mandatory": true,
               "name": "category",
               "allowedvalues": null,
               "useForCreation": true,
               "format": null,
               "defaultValue": null,
               "type": "String",
               "multiple": "false"
            },
            {
               "jsondocId": "5c9a124e-bfc6-4319-8e23-905dab2c2139",
               "description": null,
               "presentInResponse": null,
               "mandatory": null,
               "name": "id",
               "allowedvalues": null,
               "useForCreation": null,
               "format": null,
               "defaultValue": null,
               "type": "Long",
               "multiple": "false"
            },
            {
               "jsondocId": "39249920-b4a7-4ab8-b69b-f00f67a40cf9",
               "description": "The title of the book",
               "presentInResponse": true,
               "mandatory": true,
               "name": "title",
               "allowedvalues": null,
               "useForCreation": true,
               "format": null,
               "defaultValue": null,
               "type": "String",
               "multiple": "false"
            },
            {
               "jsondocId": "e4dc17da-8e00-4f8d-a570-3fcb41bf3070",
               "description": "Year published for this book",
               "presentInResponse": true,
               "mandatory": true,
               "name": "year",
               "allowedvalues": null,
               "useForCreation": true,
               "format": null,
               "defaultValue": null,
               "type": "Integer",
               "multiple": "false"
            }
         ]
      }
   ],
   "version": "0.1.1"
}